<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:mvc="http://www.springframework.org/schema/mvc"
 xmlns:tx="http://www.springframework.org/schema/tx"
 xmlns:ws="http://jax-ws.dev.java.net/spring/core" 
 xmlns:wss="http://jax-ws.dev.java.net/spring/servlet"
 xmlns:jee="http://www.springframework.org/schema/jee"
 xmlns:aop="http://www.springframework.org/schema/aop"
 xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
 http://www.springframework.org/schema/mvc
 http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
 http://www.springframework.org/schema/tx 
 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context-3.0.xsd
 http://www.springframework.org/schema/jee 
 http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
 http://jax-ws.dev.java.net/spring/core  http://jax-ws.dev.java.net/spring/core.xsd
 http://jax-ws.dev.java.net/spring/servlet http://jax-ws.dev.java.net/spring/servlet.xsd
 http://www.springframework.org/schema/aop 
 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
 	
    <bean id="myUserAuthService" class="BOL.security.UserAuthService"/>
    <!-- Spring security -->
    <import resource="spring-security.xml" />
        
    <!-- this bean implements web service methods -->
   <bean id="adminFacade" class="WSL.AdminFacade"/>
    <wss:binding url="/AdminFacade">
        <wss:service>
            <ws:service bean="#adminFacade" />
        </wss:service>
    </wss:binding>
    
    <bean id="userFacade" class="WSL.UserFacade"/>
    <wss:binding url="/UserFacade">
        <wss:service>
            <ws:service bean="#userFacade" />
        </wss:service>
    </wss:binding>

    <bean id="productFacade" class="WSL.ProductFacade"/>
    <wss:binding url="/ProductFacade">
        <wss:service>
            <ws:service bean="#productFacade" />
        </wss:service>
    </wss:binding>
    
    <!-- Scan for spring annotated components -->
    <context:component-scan base-package="Website.Controllers, BOL" />
    <mvc:resources mapping="/themes/**" location="/themes/" />   
    <!-- Process annotations on registered beans like @Autowired... -->
    <context:annotation-config/> 
    <!-- This tag registers the DefaultAnnotationHandlerMapping and
         AnnotationMethodHandlerAdapter beans that are required for Spring MVC  -->
    <mvc:annotation-driven/> 
    <!-- This tag allows for mapping the DispatcherServlet to "/" -->
    <mvc:default-servlet-handler/> 
    <!-- Exception Resolver that resolves exceptions through @ExceptionHandler methods -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"/>

    <!-- Configure the multipart resolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="100000"/>
    </bean>
        
    
    <bean id="themeSource"
    class="org.springframework.ui.context.support.ResourceBundleThemeSource">
    <property name="basenamePrefix" value="theme-" />
    </bean>	
    
    <bean id="themeResolver"
    class="org.springframework.web.servlet.theme.FixedThemeResolver">
    <property name="defaultThemeName" value="default" />
    </bean>	
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
               <value>/WEB-INF/pages/</value>
       </property>		 
       <property name="suffix">
               <value>.jsp</value>
       </property>
    </bean>
   
   
    <!--
    <bean id="myDataSource" 
         class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	<property name="driverClassName" value="com.mysql.jdbc.Driver" />
	<property name="url" value="jdbc:mysql://localhost:3306/test" />
	<property name="username" value="axis2" />
	<property name="password" value="axis2" />
    </bean>
    -->
    
    <bean id="myDataSource" 
         class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
	<property name="url" value="jdbc:hsqldb:mem:test" />
	<property name="username" value="sa" />
	<property name="password" value="" />
    </bean>
    
   
    
   <!--<jee:jndi-lookup id="myDataSource" jndi-name="java:comp/env/jdbc/test"/>-->
   
   <bean id="mySessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource" ref="myDataSource"/>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
        <prop key="hibernate.hbm2ddl.auto">create</prop>
      </props>
    </property>
    <property name="annotatedClasses">
      <list>
        <value>DAL.DEL.Product</value>
         <value>DAL.DEL.User</value>
         <value>DAL.DEL.Token</value>
      </list>
    </property>
    </bean>
    
    <bean id="sessionUserDetails" class="BOLO.sessions.SessionUserDetails"/> 
   
    <bean id="authenticationBOL" class="BOL.Authentication"/>
    <bean id="userAdmin" class="BSL.UserAdmin"/>
    <bean id="tokenBOL" class="BOL.Token"/>
    <bean id="userBOL" class="BOL.User"/>
    
    <bean id="productDAO" class="DAL.ProductDAO">
       <property name="sessionFactory" ref="mySessionFactory"/>
    </bean>
    
    <bean id="userDAO" class="DAL.UserDAO">
       <property name="sessionFactory" ref="mySessionFactory"/>
    </bean>
    
    <bean id="tokenDAO" class="DAL.TokenDAO">
       <property name="sessionFactory" ref="mySessionFactory"/>
       <property name="userDAO" ref="userDAO"/>
    </bean>
    
        
    <bean id="loginAdmin" class="BSL.LoginAdmin">
        <property name="authentication" ref="authenticationBOL"/>
    </bean>
    
    <bean id="serviceAuthoriser" class="BOL.ServiceAuthoriser">
        <property name="tokenDAO" ref="tokenDAO"/>
        <property name="tokenBOL" ref="tokenBOL"/>
    </bean>
    
    <bean id="productAdmin" class="BSL.ProductAdmin">
        <property name="productDAO" ref="productDAO"/>
        <property name="auth" ref="serviceAuthoriser"/>        
    </bean>
    
    <bean id="transactionManager"
            class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="mySessionFactory"/>
  </bean>
  <!-- Allows transactions to be made at a function level via @Transactional -->
  <tx:annotation-driven transaction-manager="transactionManager"/>   
  
</beans>